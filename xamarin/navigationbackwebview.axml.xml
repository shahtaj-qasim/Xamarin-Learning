<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:minWidth="25px"
    android:minHeight="25px">
    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/editText1" />
    <Button
        android:text="Go"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/button1" />
    <android.webkit.WebView
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:id="@+id/webView1" />
</LinearLayout>

using Android.App;
using Android.Widget;
using Android.OS;
using Android.Webkit;
using Java.Lang;
using System;
using Android.Runtime;
using Android.Views;

namespace App1
{
    [Activity(Label = "App1", MainLauncher = true, Icon = "@drawable/icon", Theme ="@android:style/Theme.NoTitleBar")]
    public class MainActivity : Activity
    {
        WebView webView;
        Button btnGo;
        EditText txtUrl;
       
        protected override void OnCreate(Bundle bundle)
        {
            base.OnCreate(bundle);

            // Set our view from the "main" layout resource
            SetContentView(Resource.Layout.Main);
            webView = FindViewById<WebView>(Resource.Id.webView1);
            txtUrl = FindViewById<EditText>(Resource.Id.editText1);
            btnGo = FindViewById<Button>(Resource.Id.button1);

            WebSettings webSettings = webView.Settings;
            webSettings.JavaScriptEnabled = true;
            webView.SetWebViewClient(new ExtendWebView());
            btnGo.Click += btnGo_Click;
            
           
        }
        private void btnGo_Click(object sender,EventArgs e)
        {
            if (!txtUrl.Text.Contains("http://"))
            {
                string address = txtUrl.Text;
                txtUrl.Text = Java.Lang.String.Format("http://" + txtUrl.Text, address);
            }

                webView.LoadUrl(txtUrl.Text);
        }
        public override bool OnKeyDown([GeneratedEnum] Keycode keyCode, KeyEvent e)
        {
            if(keyCode ==Keycode.Back && webView.CanGoBack())
            {
                webView.GoBack();
                return true;
            }
            return base.OnKeyDown(keyCode, e);
        }
    }

    internal class ExtendWebView : WebViewClient
    {
        public override bool ShouldOverrideUrlLoading(WebView view, string url)
        {
            view.LoadUrl(url);
            return true;
        }
        

    }
}

